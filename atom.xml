<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Icebergist]]></title>
  <link href="http://icebergist.com/atom.xml" rel="self"/>
  <link href="http://icebergist.com/"/>
  <updated>2016-05-30T16:41:33+02:00</updated>
  <id>http://icebergist.com/</id>
  <author>
    <name><![CDATA[Orange Iceberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Show part of a Rails template in other locale]]></title>
    <link href="http://icebergist.com/posts/display-part-of-rails-template-with-different-locale/"/>
    <updated>2016-05-30T10:06:00+02:00</updated>
    <id>http://icebergist.com/posts/display-part-of-rails-template-with-different-locale</id>
    <content type="html"><![CDATA[<p>I recently worked on a Rails project, which had parts of pages in different languages. That may be a problem if you have already translated their entire text to all required languages. You can even be tempted to hardcode parts of the text into other languages. Fortunately, there is an elegant way to solve that problem, just wrap parts of template or partials into blocks with desired locale, like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% I18n.with_locale(&#39;en&#39;) </span><span class="k">do</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  ...part of your template</span>
</span><span class='line'><span class="sx">  or</span>
</span><span class='line'><span class="sx">  &lt;%= render partial: &#39;some/partial&#39; %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Example</h3>

<p>Suppose, there is a template with only header and two paragraphs.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&lt;</span><span class="sx">%= t(&#39;my_great_header&#39;) %&gt;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;p&gt;&lt;%=</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;first_paragraph&#39;</span><span class="p">)</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;%=</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;second_paragraph&#39;</span><span class="p">)</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And locale in English and French for that template.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># in config/locales/en.yml</span>
</span><span class='line'><span class="ss">en</span><span class="p">:</span>
</span><span class='line'>  <span class="n">my_great_header</span><span class="p">:</span> <span class="s2">&quot;My English great header&quot;</span>
</span><span class='line'>  <span class="n">first_paragraph</span><span class="p">:</span> <span class="s2">&quot;First English paragraph&quot;</span>
</span><span class='line'>  <span class="n">second_paragraph</span><span class="p">:</span> <span class="s2">&quot;Second English paragraph&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># in config/locales/fr.yml</span>
</span><span class='line'><span class="ss">fr</span><span class="p">:</span>
</span><span class='line'>  <span class="n">my_great_header</span><span class="p">:</span> <span class="s2">&quot;My French great header&quot;</span>
</span><span class='line'>  <span class="n">first_paragraph</span><span class="p">:</span> <span class="s2">&quot;First French paragraph&quot;</span>
</span><span class='line'>  <span class="n">second_paragraph</span><span class="p">:</span> <span class="s2">&quot;Second French paragraph&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>And client wants first paragraph to always be in English.</p>

<p>Just wrap first paragraph in block with locale <code>'en</code>, like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&lt;</span><span class="sx">%= t(&#39;my_great_header&#39;) %&gt;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;% I18n.with_locale(&#39;en&#39;) do %&gt;</span>
</span><span class='line'><span class="sx">  &lt;p&gt;&lt;%=</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;first_paragraph&#39;</span><span class="p">)</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">&lt;p&gt;</span><span class="o">&lt;%=</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;second_paragraph&#39;</span><span class="p">)</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>and when you switch language to Franch result will be:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>My French great header
</span><span class='line'>
</span><span class='line'>First English paragraph
</span><span class='line'>
</span><span class='line'>Second French paragraph
</span></code></pre></td></tr></table></div></figure>


<p>I hope that this helps. Have a nice day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying Rails app with Capistrano 3]]></title>
    <link href="http://icebergist.com/posts/deploying-with-capistrano-3/"/>
    <updated>2016-05-25T10:42:17+02:00</updated>
    <id>http://icebergist.com/posts/deploying-with-capistrano-3</id>
    <content type="html"><![CDATA[<p>In the lifetime of every application the time comes for it to be presented to everyone. That&rsquo;s why we have to put our application on a special server which is designed for this purpose. In one word, we need to <strong>deploy</strong> our application. In this post you will see how to deploy app with <a href="http://www.capistranorb.com/">Capistrano 3</a>.</p>

<p>Capistrano is a great developers tool that is used to automatically deploy projects to remote server.</p>

<h3>Add Capistrano to Rails app</h3>

<p>I will assume you already have a server set up and an application ready to be deployed remotely.</p>

<p>We will use gem <a href="https://github.com/capistrano/rails">&lsquo;capistrano-rails&rsquo;</a>, so we need to add this gems to Gemfile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.5&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.1.6&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>and install gems with <code>$ bundle install</code>.</p>

<h3>Initialize Capistrano</h3>

<p>Then run the following command to create configuration files:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">cap</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>This command  creates all the necessary configuration files and directory structure with two stages, staging and production:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Capfile</span>
</span><span class='line'><span class="n">config</span><span class="o">/</span><span class="n">deploy</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="n">config</span><span class="o">/</span><span class="n">deploy</span><span class="o">/</span><span class="n">production</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="n">config</span><span class="o">/</span><span class="n">deploy</span><span class="o">/</span><span class="n">staging</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="n">lib</span><span class="o">/</span><span class="n">capistrano</span><span class="o">/</span><span class="n">tasks</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h3>Require needed gems in Capfile</h3>

<p>Open the <code>Capfile</code> and add or uncomment this lines:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;capistrano/setup&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capistrano/deploy&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capistrano/bundler&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capistrano/rails/assets&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capistrano/rails/migrations&#39;</span>
</span><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;lib/capistrano/tasks/*.rake&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span> <span class="n">import</span> <span class="n">r</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Add capistrano-rbenv gem</h4>

<p>The <a href="https://github.com/capistrano/rbenv">capistrano-rbenv</a> gem provides rbenv support for Capistrano 3.</p>

<p>Add this line to the Gemfile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.5&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.1.6&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano-rbenv&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.0&#39;</span><span class="p">,</span> <span class="nb">require</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And require this gem in Capfile <code>require 'capistrano/rbenv'</code>.</p>

<h4>Add capistrano-passenger gem</h4>

<p>The <a href="https://github.com/capistrano/passenger">capistrano-passenger</a> gem adds a task to restart your application after deployment via Capistrano.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano-rbenv&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.0&#39;</span><span class="p">,</span> <span class="nb">require</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano-passenger&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.2.0&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And require this gem in Capfile <code>require 'capistrano/passenger'</code>.</p>

<h3>Configure deploy.rb file</h3>

<p>Open <code>config/deploy.rb</code> and add options for deployment:</p>

<ul>
<li>set all needed variables, this is the variant with two servers (<em>staging and production</em>) and with user created on server (<em>server setup is theme for different post</em>)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:application</span><span class="p">,</span> <span class="s1">&#39;app-name&#39;</span>   <span class="c1"># application name</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_user</span><span class="p">,</span> <span class="s1">&#39;user-name&#39;</span>   <span class="c1"># name of user who is set on server</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:repo_url</span><span class="p">,</span> <span class="s1">&#39;git@github.com:nickname/repo_name.git&#39;</span>   <span class="c1"># your repository url from github </span>
</span><span class='line'><span class="n">set</span> <span class="ss">:branch</span><span class="p">,</span> <span class="no">ENV</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s1">&#39;BRANCH&#39;</span><span class="p">,</span> <span class="s1">&#39;master&#39;</span><span class="p">)</span>   <span class="c1"># branch which you want to deploy from</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>set the path where you want to find your app on server, starting from server&rsquo;s root</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="s2">&quot;/path/to/app/</span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:rails_env</span><span class="p">)</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:application</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>set config files, Capistrano uses a folder called shared to manage files and directories that should persist across releases</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:linked_files</span><span class="p">,</span> <span class="n">fetch</span><span class="p">(</span><span class="ss">:linked_files</span><span class="p">,</span> <span class="o">[]</span><span class="p">)</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s1">&#39;config/database.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;config/secrets.yml&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:linked_dirs</span><span class="p">,</span> <span class="n">fetch</span><span class="p">(</span><span class="ss">:linked_dirs</span><span class="p">,</span> <span class="o">[]</span><span class="p">)</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s1">&#39;log&#39;</span><span class="p">,</span> <span class="s1">&#39;tmp/pids&#39;</span><span class="p">,</span> <span class="s1">&#39;tmp/cache&#39;</span><span class="p">,</span> <span class="s1">&#39;tmp/sockets&#39;</span><span class="p">,</span> <span class="s1">&#39;vendor/bundle&#39;</span><span class="p">,</span> <span class="s1">&#39;public/system&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>set ruby version, we use <code>gem 'capistrano-rbenv'</code> for this setup</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:rbenv_type</span><span class="p">,</span> <span class="ss">:user</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:rbenv_ruby</span><span class="p">,</span> <span class="s1">&#39;2.2.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>set option for restarting your application after deployment with <code>gem 'capistrano-passenger'</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:passenger_restart_with_touch</span><span class="p">,</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>here you can put all kinds of rake tasks for different needs that you can run every time when you deploy your application.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">namespace</span> <span class="ss">:deploy</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">desc</span> <span class="s2">&quot;Description of task&quot;</span>
</span><span class='line'>    <span class="n">task</span> <span class="ss">:name_of_task</span> <span class="k">do</span>
</span><span class='line'>        <span class="c1"># do something</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Capistrano&rsquo;s server settings</h3>

<p>You need to tell Capistrano where to find your server.
This is an example of server&rsquo;s settings for application where everything is on same machine (application, server, database).</p>

<ul>
<li>In <code>config/deploy/staging</code> set:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">server</span> <span class="s1">&#39;your.staging.server.com&#39;</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="n">fetch</span><span class="p">(</span><span class="ss">:deploy_user</span><span class="p">),</span> <span class="ss">roles</span><span class="p">:</span> <span class="sx">%w{app db web}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>and set rails environment</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:rails_env</span><span class="p">,</span> <span class="s1">&#39;staging&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also set the same configuration for production server.</p>

<p>In <code>config/deploy/production</code> add:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">server</span> <span class="s1">&#39;your.production.server.com&#39;</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="n">fetch</span><span class="p">(</span><span class="ss">:deploy_user</span><span class="p">),</span> <span class="ss">roles</span><span class="p">:</span> <span class="sx">%w{app db web}</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:rails_env</span><span class="p">,</span> <span class="s1">&#39;production&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Deploy your application</h3>

<p>Just run <code>deploy</code> task:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">cap</span> <span class="n">staging</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">cap</span> <span class="n">production</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>and that is it, your app is live and you can visit it on server&rsquo;s name url, in our example case <em>your.staging.server.com</em>.</p>

<p>Note: you can find complete documentation on <a href="http://capistranorb.com/">Capistrano site</a>.</p>

<p>Have a nice day!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rake db:schema:load vs rake db:migrate]]></title>
    <link href="http://icebergist.com/posts/rake-db-migrate-vs-rake-db-schema-load/"/>
    <updated>2016-03-24T08:09:25+01:00</updated>
    <id>http://icebergist.com/posts/rake-db-migrate-vs-rake-db-schema-load</id>
    <content type="html"><![CDATA[<p>Sooner or later every new Ruby developer needs to understand  differences between this two common rake tasks. Basically, these simple definition tells us everything we need to know:</p>

<ul>
<li><code>rake db:migrate</code> runs migrations that have not run yet</li>
<li><code>rake db:schema:load</code> loads the schema.db file into database.</li>
</ul>


<p>but the real question is when to use one or the other.</p>

<p><strong>Advice:</strong> <a id="advice"></a> when you are adding a new migration to an existing app then you need to run <code>rake db:migrate</code>, but when you join to existing application (<em>especially some old application</em>), or when you drop your applications database and you need to create it again, always run <code>rake db:schema:load</code> to load schema.</p>

<h3>Example</h3>

<p>I am working on application which use <a href="https://github.com/globalize/globalize">globalize gem</a> for ActiveRecord model/data translations. Globalize work this way:</p>

<ul>
<li>first specify attributes which need to be translatable</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">translates</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:text</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<ul>
<li>then create translation tables</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreatePosts</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">up</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:posts</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="no">Post</span><span class="o">.</span><span class="n">create_translation_table!</span> <span class="ss">title</span><span class="p">:</span> <span class="ss">:string</span><span class="p">,</span> <span class="ss">text</span><span class="p">:</span> <span class="ss">:text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">down</span>
</span><span class='line'>    <span class="n">drop_table</span> <span class="ss">:posts</span>
</span><span class='line'>    <span class="no">Post</span><span class="o">.</span><span class="n">drop_translation_table!</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Note</strong> <em>that the ActiveRecord model Post must already exist and have listed attributes for translations</em>.</p>

<ul>
<li>and run <code>rake db:migrate</code> .</li>
</ul>


<p>Problem comes when you change your mind and decide to leave title to be untranslatable.</p>

<ul>
<li>remove title from post translations table</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">RemoveTitleFromPostTranslations</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">up</span>
</span><span class='line'>    <span class="n">remove_column</span> <span class="ss">:post_translations</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:string</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">down</span>
</span><span class='line'>    <span class="no">Entry</span><span class="o">.</span><span class="n">add_translation_fields!</span> <span class="ss">title</span><span class="p">:</span> <span class="ss">:string</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>add title to posts table</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AddTitleToPosts</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:posts</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:string</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>remove title attribute from model translations</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">translates</span> <span class="ss">:text</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>and run <code>rake db:migrate</code>.</li>
</ul>


<p>Everything looking good, so where is the problem?</p>

<p>Here it is! If you decide to delete your database and create it again you need to use:</p>

<ul>
<li><code>rake db:drop</code></li>
<li><code>rake db:create</code></li>
<li><code>rake db:schema:load</code></li>
</ul>


<p>Because, if you try to use <code>rake db:migrate</code> instead of <code>rake db:schema:load</code> you will get <strong>BIG ERROR!</strong>, because for your first migration &ldquo;create_posts&rdquo; it is necessary that you have defined translatable attributes :title and :text in Post model, but you removed :title from Post model translations.</p>

<p>So just follow <a href="#advice">advice</a> above, and good luck.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Headless Firefox in Ubuntu on VirtualBox for Cucumber testing]]></title>
    <link href="http://icebergist.com/posts/headless-firefox-in-ubuntu-on-virtual-box-for-cucumber-testing/"/>
    <updated>2015-12-03T10:12:56+01:00</updated>
    <id>http://icebergist.com/posts/headless-firefox-in-ubuntu-on-virtual-box-for-cucumber-testing</id>
    <content type="html"><![CDATA[<p>If you use <a href="http://www.vagrantup.com/downloads.html">Vagrant</a>, <a href="https://www.virtualbox.org/">VirtualBox</a> and Ubuntu to build your Rails apps and you want to test it with Cucumber scenarios, this is the right post for you. By default Vagrant and VirtualBox use Ubuntu without an X server and GUI.</p>

<p>Everything goes well until you need <code>@javascript</code> flag for your cucumber scenario. <code>@javascript</code> uses a javascript-aware system to process web requests (e.g. Selenium) instead of the default (non-javascript-aware) webrat browser.</p>

<h3>Install Mozilla Firefox</h3>

<p>Selenium WebDriver is flexible and lets you run selenium headless in servers with no display. But in order to run, Selenium needs to launch a browser. If there is no display to the machine, the browsers are not launched. So in order to use selenium, you need to fake a display and let selenium and the browser think they are running in a machine with a display.</p>

<p>Install latest version of Mozilla Firefox:</p>

<p><code>sudo apt-get install firefox</code></p>

<p>Since Ubuntu is running without a X server Selenium cannot start Firefox because it requires an X server.</p>

<h3>Setting up virtual X server</h3>

<p>Virtual X server is required to make browsers run normally by making them believe there is a display available, although it doesn&rsquo;t create any visible windows.</p>

<!--more-->


<p>Xvfb (X Virtual FrameBuffer) works fine for this. Xvfb lets you run X-Server in machines with no display devices.</p>

<p>Install xvfb on ubuntu:</p>

<p><code>sudo apt-get install xvfb</code></p>

<p>Lets run the Xvfb service in a display number which is less likely to clash even if you add a display at a later stage. Display 10 will do fine.</p>

<p><code>sudo Xvfb :10 -ac</code></p>

<p>The parameter -ac makes xvfb run with access control off. The server should be running now.</p>

<h3>Headless Firefox</h3>

<p>Before you can run a browser, you need to set the environment variable DISPLAY with the display number at which xvfb is running.</p>

<p>Open new tab in terminal and set the DISPLAY variable:</p>

<p><code>export DISPLAY=:10</code></p>

<p>and start mozilla firefox:</p>

<p><code>firefox</code></p>

<p>Now you run firefox headlessly in Ubuntu, and you can run your cucumber scenarios with <code>@javascript</code> flag.</p>

<h3>Start virtual X server automatically</h3>

<p>To run your X server automatically, after installing Xvfb, you will need to:</p>

<ul>
<li>put content of <a href="https://gist.github.com/basti/2db0b71e893ee4d6d015">this gist</a> in <code>/etc/init.d/xvfb</code> (hint use <code>sudo wget</code> command to do that)</li>
<li>make it executable <code>sudo chmod a+x /etc/init.d/xvfb</code></li>
<li>start xvfb on display number 10 <code>export DISPLAY=:10</code></li>
<li>run X server <code>sudo /etc/init.d/xvfb start</code></li>
<li>when you want to stop X server <code>sudo /etc/init.d/xvfb stop</code></li>
</ul>


<p>This is my way to run firefox headlessly in Virtual box Ubuntu, and to run cucumber scenarios with <code>@javascript</code> flag.</p>

<p>References:</p>

<ul>
<li><a href="http://www.installationpage.com/selenium/how-to-run-selenium-headless-firefox-in-ubuntu/">Selenium Headless Automated Testing in Ubuntu</a></li>
<li><a href="https://gist.github.com/jterrace/2911875">Xvfb init script for Ubuntu</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import and export MySQL dump]]></title>
    <link href="http://icebergist.com/posts/import-and-export-mysql-dump/"/>
    <updated>2015-12-02T10:44:23+01:00</updated>
    <id>http://icebergist.com/posts/import-and-export-mysql-dump</id>
    <content type="html"><![CDATA[<p>Another simple task that&rsquo;s often hard for beginners is importing and exporting MySQL dumps. Here is quick rundown on how to do it.</p>

<p>To export data you need to use <code>mysqldump</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysqldump -u db_user -p db_name &gt; dump_name.sql
</span></code></pre></td></tr></table></div></figure>


<p>Options given to <code>mysqldump</code> are:</p>

<ul>
<li><code>-u db_user</code> &ndash; connect as user <code>db_user</code> to database</li>
<li><code>-p</code> &ndash; use password, it will ask you to enter your password</li>
<li><code>db_name</code> is the name of MySQL database you want to dump</li>
<li><code>&gt; dump_name.sql</code> &ndash; by default <code>mysqldump</code> will print out the dump to terminal, but simple output redirect with <code>&gt;</code> will instead write it to given filename, in this case <code>dump_name.sql</code></li>
</ul>


<p>Now that you have <code>dump_name.sql</code> file with all SQL queries needed to replicate your database you can import it using general-purpose <code>mysql</code> client:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql -u db_user -p db_name &lt; dump_name.sql
</span></code></pre></td></tr></table></div></figure>


<p>User, password, and database name options are the same as for <code>mysqldump</code>. Since <code>mysql</code> reads input from terminal this time we can use <code>&lt;</code> to read input from given file instead.</p>

<p>As always for more information you can consult manual using <code>man mysqldump</code> and <code>man mysql</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create and extract archives using tar and gzip]]></title>
    <link href="http://icebergist.com/posts/create-and-extract-archives-using-tar-and-gzip/"/>
    <updated>2015-11-13T13:28:36+01:00</updated>
    <id>http://icebergist.com/posts/create-and-extract-archives-using-tar-and-gzip</id>
    <content type="html"><![CDATA[<p>One of the simplest tasks is creating and extracting files using <code>tar</code> and <code>gzip</code>. Yet for most new developers this is a daunting task. These days <code>tar</code> is mostly used to simply combine a few files into a single file and then <code>gzip</code> is used to compress that file.</p>

<p>Here is a quick overview how to use <code>tar</code> and <code>gzip</code> to create and compress an archive:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># archive individual files</span>
</span><span class='line'>tar -cvzf myarchive.tar.gz /path/to/file1 /path/to/file2
</span><span class='line'>
</span><span class='line'><span class="c"># archive whole directory</span>
</span><span class='line'>tar -cvzf myarchive.tar.gz /path/to/dir
</span><span class='line'>
</span><span class='line'><span class="c"># archive whole directory but don&#39;t store full path</span>
</span><span class='line'>tar -cvzf myarchive.tar.gz -C /path/to/dir ./
</span></code></pre></td></tr></table></div></figure>


<p>Options give to tar are: <code>c</code> to create new archive, <code>v</code> to be verbose, <code>z</code> to compress resulting archive with <code>gzip</code>, and <code>f</code> to write the archive to specified file. After options you can list files and dirs you want to archive.</p>

<p>In all examples we provide a full path to a file or dir we want to archive. In this case <code>tar</code> will store files in the archive using the full path. This means once you extract the files you&rsquo;ll have a complete directory structure from root dir onwards.</p>

<p>The way to avoid this is either to manually <code>cd</code> to dir in which files are stored, or to tell <code>tar</code> using <code>C</code> option to change dir before archiving files.</p>

<p>Finally to extract an archive:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>tar -xvzf myarchive.tar.gz
</span></code></pre></td></tr></table></div></figure>


<p>The <code>x</code> option tells <code>tar</code> to extract the archive into current directory.</p>

<p>For more information you can consult manual using <code>man tar</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating and publishing a ruby gem]]></title>
    <link href="http://icebergist.com/posts/creating-and-publishing-a-ruby-gem/"/>
    <updated>2015-06-08T09:12:04+02:00</updated>
    <id>http://icebergist.com/posts/creating-and-publishing-a-ruby-gem</id>
    <content type="html"><![CDATA[<p>A gem is a simple way to distribute functionality, it can be a small plugin, a Ruby library or sometimes a whole program. Thanks to RubyGems, a gem hosting service, developers have a wide range of gems at their disposal allowing them to easily add functionality to their applications.</p>

<p>But what if there is no gem available that will suit the functionality you need, and you find yourself writing the same code over and over again for different projects? Well, in that case you should consider making your own gem.</p>

<p>It&rsquo;s considered a good practice to extract a gem out of an existing application, since that way you will have a better understanding of all the requirements as well as how the gem will be used. This blog post will illustrate just that on a real life example, and will take you through the process of creating a slug_converter gem.</p>

<!--more-->


<h3>Slug converter gem</h3>

<p>Source code for slug_converter gem was developed while working on a link shortener application, in order to generate a string consisting of predefined characters, based on a given id number of a link. As it will be described in this blog post, this code was easily extracted from the application into an independent gem that was released on  RubyGems.</p>

<p>Although it may seem like a complex task at first, creating a gem is not that difficult, if you have RubyGems and Bundler installed you are good to go. We already know what RubyGems is, and Bundler is a package manager that determines a full set of direct dependencies needed by your application.</p>

<p>Now let&rsquo;s build a gem!</p>

<h3>Creating a gem</h3>

<p>First step is to make sure that bundler gem is installed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span></code></pre></td></tr></table></div></figure>


<p>once bundler is installed creating a structure for your new gem is easy,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle gem slug_converter
</span></code></pre></td></tr></table></div></figure>


<p>The first time you use bundler to create a gem you will be prompted to answer a couple of questions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Do you want to include code of conduct in your gems you generate?
</span><span class='line'>Do you want to licence your code permissively under the MIT licence?
</span><span class='line'>Do you want to generate tests with your gem?
</span><span class='line'>Type rspec or minitest to generate those tests files now and in the future:
</span></code></pre></td></tr></table></div></figure>


<p>Answering these questions will help bundler configure and setup files that are being generated now and in the future. Here we answered yes to first 4 qestions and choose rspec for testing.</p>

<p>Running <code>$ bundle gem slug_converter</code> command resulted with &ldquo;slug_converter&rdquo; directory with essential gem file structure being created, and git repository initialized, assuming that you are using git for version management (as you should).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Creating gem <span class="s1">&#39;slug_converter&#39;</span>...
</span><span class='line'> create  slug_converter/Gemfile
</span><span class='line'> create  slug_converter/.gitignore
</span><span class='line'> create  slug_converter/lib/slug_converter.rb
</span><span class='line'> create  slug_converter/lib/slug_converter/version.rb
</span><span class='line'> create  slug_converter/slug_converter.gemspec
</span><span class='line'> create  slug_converter/Rakefile
</span><span class='line'> create  slug_converter/README.md
</span><span class='line'> create  slug_converter/bin/console
</span><span class='line'> create  slug_converter/bin/setup
</span><span class='line'> create  slug_converter/LICENSE.txt
</span><span class='line'> create  slug_converter/.travis.yml
</span><span class='line'> create  slug_converter/.rspec
</span><span class='line'> create  slug_converter/spec/spec_helper.rb
</span><span class='line'> create  slug_converter/spec/slug_converter_spec.rb
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s go through files that bundler generated for us, .gemspec file is the &ldquo;heart&rdquo; of your gem so lets start with <code>slug_converter.gemspec</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">lib</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s1">&#39;../lib&#39;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'><span class="vg">$LOAD_PATH</span><span class="o">.</span><span class="n">unshift</span><span class="p">(</span><span class="n">lib</span><span class="p">)</span> <span class="k">unless</span> <span class="vg">$LOAD_PATH</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">lib</span><span class="p">)</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;slug_converter/version&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Gem</span><span class="p">:</span><span class="ss">:Specification</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">spec</span><span class="o">|</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">name</span>         <span class="o">=</span> <span class="s2">&quot;slug_converter&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">version</span>      <span class="o">=</span> <span class="ss">SlugConverter</span><span class="p">:</span><span class="ss">:VERSION</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">authors</span>      <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Your Name&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">email</span>        <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;youremail@example.com&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># if spec.respond_to?(:metadata)</span>
</span><span class='line'>  <span class="c1">#   spec.metadata[&#39;allowed_push_host&#39;] = &quot;TODO: Set to &#39;http://mygemserver.com&#39; to prevent pushes to rubygems.org, or delete to allow pushes to any server.&quot;</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">summary</span>      <span class="o">=</span> <span class="sx">%q{Number &lt;-&gt; Slug converter}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">description</span>  <span class="o">=</span> <span class="sx">%q{Generates a slug based on the given number and the other way around}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">homepage</span>     <span class="o">=</span> <span class="s2">&quot;https://github.com/orangeiceberg/slug_converter&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">license</span>      <span class="o">=</span> <span class="s2">&quot;MIT&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">files</span>        <span class="o">=</span> <span class="sb">`git ls-files -z`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\x0</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">reject</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">%r{^(test|spec|features)/}</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">bindir</span>       <span class="o">=</span> <span class="s2">&quot;exe&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">executables</span>  <span class="o">=</span> <span class="n">spec</span><span class="o">.</span><span class="n">files</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">%r{^exe/}</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">require_paths</span><span class="o">=</span> <span class="o">[</span><span class="s2">&quot;lib&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;bundler&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 1.8&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;rake&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 10.0&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This file contains metadata about your gem and it can be populated directly, so here you can enter all the data such as name, description, licence&hellip; This file also contains information about what files should be packaged in your gem, as well as the load path to include the gem directory when the gem is first loaded. Most of these default settings will work for the majority of gems but you can always edit them if you want different behavior. At the bottom of the file add any gem dependencies that are required.</p>

<p>The version number of the gem is set in <code>SlugConverter::VERSION</code> constant which is kept in a separate version.rb file, and you can change it there for every new version of your gem.</p>

<pre><code>lib
 |--slug_converter
         |--version.rb
</code></pre>

<p>A very important part of every gem is the <code>README</code> file, where you can describe how to install and use the gem, and the <code>LICENCE</code> file where you can define the terms and conditions under which the gem can be used.</p>

<p>In the lib directory there is a file which has the same name as your gem (recommended), and that file will be loaded when someone requires your gem. If the gem you are writing is simple all the code can be placed in this single file, or in case of more complex gems all the other files from the lib directory are required in this file.</p>

<p>There is also a <code>Gemfile</code> generated, but this file doesn&rsquo;t have to be managed directly since all it does is look in <code>.gemspec</code> for required dependencies and then loads them through bundler. All the dependencies required by the gem should be specified in the <code>.gemspec</code> file.</p>

<p>Another file that is generated by the bundler is <code>Rakefile</code> which just adds some gem tasks from bundler, and we can see those tasks with explanation by running</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake -T
</span><span class='line'>rake build    <span class="c"># Build slug_converter-0.0.1.gem into the pkg directory</span>
</span><span class='line'>rake install  <span class="c"># Build and install slug_converter-0.0.1.gem into system gems</span>
</span><span class='line'>rake release  <span class="c"># Create tag v0.0.1 and build and push slug_converter-0.1.0.gem to Rubygems</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Writing tests</h3>

<p>If you are following the principles of Test Driven Development you will probably like to start by writing tests for you gem, for that purpose I would suggest using RSpec.
To do that you will need to add rspec as a development dependency to you gemspec file:</p>

<pre><code>spec.add_development_dependency 'rspec'
</code></pre>

<p>As mentioned in the beginning, when running bundle gem for the first time, bundler will asks if you would like to generate test files for your gem and to choose if you want to use rspec or minitest. If you answer with yes, and choose rspec, bundler will generate a spec directory with two files:</p>

<pre><code>|-- spec
      |-- slug_converter_spec.rb
      |-- spec_helper.rb
</code></pre>

<p>In the <code>spec_helper.rb</code> file you can reference any test globals or configuration.</p>

<p>Since we are extracting code from an existing application we already have all the tests written so we just need to copy them into the generated <code>spec/slug_converter_spec.rb</code> file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class='line'><span class="n">describe</span> <span class="no">SlugConverter</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;has a version number&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="ss">SlugConverter</span><span class="p">:</span><span class="ss">:VERSION</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">be</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;.number&quot;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;returns number when number is set&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span><span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">111</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">111</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;returns decoded number for existing slug&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;vg&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">363</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;.number&quot;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets number to given value&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">211</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">number</span><span class="o">=</span><span class="mi">210</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">210</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets slug to encoded value of number&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">211</span><span class="p">)</span>
</span><span class='line'>      <span class="n">converted_slug</span><span class="o">.</span><span class="n">number</span><span class="o">=</span><span class="mi">210</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">slug</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s2">&quot;pb&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets number to integer value of given number passed as string&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;210&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">210</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets slug to encoded value of given number passed as string&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;210&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">slug</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s2">&quot;pb&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets number to integer value of argument that starts with a number but also contains letters&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;210jj&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">210</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets slug to encoded value of argument that starts with a number but also contains letters&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;210jj&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">slug</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s2">&quot;pb&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;.slug&quot;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>     <span class="n">it</span> <span class="s2">&quot;returns slug when slug is set&quot;</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hy&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">slug</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s2">&quot;hy&quot;</span><span class="p">)</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>     <span class="n">it</span> <span class="s2">&quot;returns encoded slug when link id is set&quot;</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">converted_id</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">113</span><span class="p">)</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">converted_id</span><span class="o">.</span><span class="n">slug</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s2">&quot;hy&quot;</span><span class="p">)</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;.slug&quot;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets slug to given value&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;ezk&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">slug</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;ebk&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s2">&quot;ebk&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;sets number to decoded value of slug&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">converted_slug</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;pb&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">converted_slug</span><span class="o">.</span><span class="n">slug</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;ezk&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">converted_slug</span><span class="o">.</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">1483</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;raises Arrgument Error exception if given value is an empty string&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span> <span class="p">{</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">raise_error</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;raises Arrgument Error exception if given value is nil&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span> <span class="p">{</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">raise_error</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;raises Arrgument Error exception if given value contains unpermitted letters&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span> <span class="p">{</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;iiii&quot;</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">raise_error</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;raises Arrgument Error exception if given value starts with letter but contains numbers&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span> <span class="p">{</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;bb12&quot;</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">raise_error</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>To make rspec rake task available we will setup tasks folder where we&rsquo;ll place our <code>rspec.rake</code> file containing only 2 lines:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rspec/core/rake_task&#39;</span>
</span><span class='line'><span class="ss">RSpec</span><span class="p">:</span><span class="ss">:Core</span><span class="o">::</span><span class="no">RakeTask</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:spec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>and then we will import this file in our Rakefile that bundler provided automatically:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;tasks/**/*.rake&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="nb">method</span><span class="p">(</span><span class="ss">:import</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle <span class="nb">exec </span>rake spec
</span></code></pre></td></tr></table></div></figure>


<p>And watch your tests fail. :)</p>

<h3>Add gem functionality</h3>

<p>Now we need to make those test go green. To do that we will again copy the existing code from our application in the main gem file <code>lib/slug_converter.rb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;slug_converter/version&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;set&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;gem_config&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SlugConverter</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">GemConfig</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">with_configuration</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">has</span> <span class="ss">:alphabet</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="s2">&quot;qjeghxtrpnfmdzwvsybkuoca&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">number_or_slug</span><span class="p">)</span>
</span><span class='line'>     <span class="vi">@alphabet</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">alphabet</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">number_or_slug</span><span class="o">.</span><span class="n">to_i</span> <span class="o">!=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="vi">@number</span> <span class="o">=</span> <span class="n">number_or_slug</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">validate_string</span><span class="p">(</span><span class="n">number_or_slug</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@slug</span> <span class="o">=</span> <span class="n">number_or_slug</span><span class="o">.</span><span class="n">downcase</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s1">&#39;Argument must be integer value or non-empty string consisting of predefined letters&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">number</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@number</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="vi">@number</span> <span class="o">=</span> <span class="n">bijective_decode</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="vi">@number</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">number</span><span class="o">=</span><span class="p">(</span><span class="n">new_number</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@number</span> <span class="o">=</span> <span class="n">new_number</span>
</span><span class='line'>    <span class="vi">@slug</span> <span class="o">=</span> <span class="n">bijective_encode</span>
</span><span class='line'>    <span class="vi">@number</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">slug</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@slug</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="vi">@slug</span> <span class="o">=</span> <span class="n">bijective_encode</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="vi">@slug</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">slug</span><span class="o">=</span><span class="p">(</span><span class="n">new_slug</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@slug</span> <span class="o">=</span> <span class="n">new_slug</span>
</span><span class='line'>    <span class="vi">@number</span> <span class="o">=</span> <span class="n">bijective_decode</span>
</span><span class='line'>    <span class="vi">@slug</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">bijective_encode</span>
</span><span class='line'>      <span class="nb">id</span> <span class="o">=</span> <span class="vi">@number</span>
</span><span class='line'>      <span class="k">return</span> <span class="vi">@alphabet</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="k">if</span> <span class="nb">id</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>      <span class="n">s</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>      <span class="n">base</span> <span class="o">=</span> <span class="vi">@alphabet</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>      <span class="k">while</span> <span class="nb">id</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">s</span> <span class="o">&lt;&lt;</span> <span class="vi">@alphabet</span><span class="o">[</span><span class="nb">id</span><span class="o">.</span><span class="n">modulo</span><span class="p">(</span><span class="n">base</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>        <span class="nb">id</span> <span class="o">/=</span> <span class="n">base</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">s</span><span class="o">.</span><span class="n">reverse</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">bijective_decode</span>
</span><span class='line'>      <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="n">base</span> <span class="o">=</span> <span class="vi">@alphabet</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>      <span class="vi">@slug</span><span class="o">.</span><span class="n">each_char</span> <span class="p">{</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span> <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">*</span> <span class="n">base</span> <span class="o">+</span> <span class="vi">@alphabet</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">i</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">validate_string</span><span class="p">(</span><span class="n">slug</span><span class="p">)</span>
</span><span class='line'>      <span class="k">unless</span> <span class="n">slug</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>        <span class="n">alphabet</span> <span class="o">=</span> <span class="no">Set</span><span class="o">.</span><span class="n">new</span> <span class="vi">@alphabet</span>
</span><span class='line'>        <span class="n">slug_letters</span> <span class="o">=</span> <span class="no">Set</span><span class="o">.</span><span class="n">new</span> <span class="n">slug</span><span class="o">.</span><span class="n">downcase</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span>
</span><span class='line'>        <span class="n">slug</span> <span class="o">!=</span> <span class="s2">&quot;&quot;</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">slug_letters</span><span class="o">.</span><span class="n">subset?</span> <span class="n">alphabet</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now when we run the tests again, they should all pass.</p>

<h3>Making your gem configurabile</h3>

<p>In order to allow users to set their own alphabet that will be used by the SlugConverter, we needed to make our gem configurabile. To do this we used <a href="https://github.com/krautcomputing/gem_config">https://github.com/krautcomputing/gem_config</a> gem.</p>

<p>You will notice this code at the begining of the SlugConverter class:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SlugConverter</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">GemConfig</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">with_configuration</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">has</span> <span class="ss">:alphabet</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="s2">&quot;qjeghxtrpnfmdzwvsybkuoca&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">number_or_slug</span><span class="p">)</span>
</span><span class='line'>     <span class="vi">@alphabet</span> <span class="o">=</span> <span class="no">SlugConverter</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">alphabet</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span>
</span><span class='line'>     <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>  
</span><span class='line'>
</span><span class='line'>  <span class="c1"># rest of the code omitted    </span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>this code along with <code>spec.add_runtime_dependency 'gem_config'</code> added as a dependency in <code>slug_converter.gemspec</code> file, alows us to make the gem configureabile.</p>

<p>Custom aphabet can than be defined by adding <code>config/initializers/slug_converter.rb</code> to your application, and defining the alphabet like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SlugConverter</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">alphabet</span> <span class="o">=</span> <span class="s2">&quot;your_custom_alphabet_here&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Releasing your gem</h3>

<p>Now that we have the test passing and all the code in place it&rsquo;s time to make the gem available for everyone to use by releasing it on RubyGems, to do that you will need to have a RubyGems account. If this is the first time you release a gem you will be prompted to enter your RubyGems username and password. You will also need to have your repository setup on Github.</p>

<p>Then with just one comand:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake release
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>your code will be pushed to your Github repository,</li>
<li>your git repository will be tagged with the version number using a name like &ldquo;v1.0.0&rdquo;.</li>
<li>your gem released on RubyGems.</li>
</ul>


<p>The ruby gem described in this blog post can be found here <a href="https://rubygems.org/gems/slug_converter,">https://rubygems.org/gems/slug_converter,</a> and all the code is in this GitHub repository <a href="https://github.com/orangeiceberg/slug_converter">https://github.com/orangeiceberg/slug_converter</a> .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[changing database starting id]]></title>
    <link href="http://icebergist.com/posts/changing-database-starting-id/"/>
    <updated>2015-06-01T11:03:47+02:00</updated>
    <id>http://icebergist.com/posts/changing-database-starting-id</id>
    <content type="html"><![CDATA[<p>For our new project it was necessary to modify the starting id of our database. This can be handled through migration for creating table but we decided to create a rake task that handled this for us.</p>

<p>The rake task that we created detects what database is being used and executes appropriate changes according to that.</p>

<!--more-->


<p>You can create a rake task using rails generate command for rake task:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails g task namespace task_name</span></code></pre></td></tr></table></div></figure>


<p>This will create your task in lib/tasks with chosen namespace and task name.</p>

<p>Here is our task and an explanation that follows.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">namespace</span> <span class="ss">:database</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Detect database that&#39;s being used and then increment its id&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">autoincrement</span><span class="p">:</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">db_name_downcase</span> <span class="o">=</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">adapter_name</span><span class="o">.</span><span class="n">downcase</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="no">Link</span><span class="o">.</span><span class="n">maximum</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span> <span class="o">&lt;</span> <span class="mi">1000</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">db_name_downcase</span><span class="o">.</span><span class="n">start_with?</span> <span class="s2">&quot;mysql&quot;</span>
</span><span class='line'>        <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;ALTER TABLE links AUTO_INCREMENT = 1000&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">db_name_downcase</span><span class="o">.</span><span class="n">start_with?</span> <span class="s2">&quot;postgres&quot;</span>
</span><span class='line'>        <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;ALTER SEQUENCE links_id_seq START with 1000 RESTART;&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">db_name_downcase</span><span class="o">.</span><span class="n">start_with?</span> <span class="s2">&quot;sqlite&quot;</span>
</span><span class='line'>        <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;insert into sqlite_sequence(name,seq) values(&#39;links&#39;, 1000)&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;To perform this task your database shouldn&#39;t have records with id number higher than 1000&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We need to change the starting id of our database to 1000 so we check that we don&rsquo;t have a record with id higher than 1000. Link is our Active Record model and links is the name of our table.</p>

<p>ActiveRecord::Base.connection returns the connection currently associated with the class. We use it to detect the name of database and execute appropriate changes.</p>

<h3>MySQL</h3>

<p>For MySQL we need to set AUTO_INCREMENT value to 1000, Auto-increment allows a unique number to be generated when a new record is inserted into a table. When first record is created it sets its primary key to 1 by default  and it will auto increment by 1 for each new record.</p>

<h3>PostgreSQL</h3>

<p>For Postgres we have to explain what a sequence is. A sequence is a special kind of a database object designed for generating unique numeric identifiers. It is typically used to generate artificial primary keys. Sequences are similar to the Auto-increment concept in MySQL.</p>

<h3>SQLite</h3>

<p>For SQlite we altered sqlite_sequence table, which is an internal table used to implement AUTOINCREMENT. It is created automatically whenever any ordinary table with an AUTOINCREMENT integer primary key is created.</p>

<p>You can check <a href="http://stackoverflow.com/questions/2075331/change-starting-id-number">this Stack Overflow discussion</a> that was very helpful to me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize Devise permitted parameters]]></title>
    <link href="http://icebergist.com/posts/customize-devise-permitted-parameters/"/>
    <updated>2015-05-04T16:07:22+02:00</updated>
    <id>http://icebergist.com/posts/customize-devise-permitted-parameters</id>
    <content type="html"><![CDATA[<p>If you are using Devise gem for authentication and you have been adding custom fields to your model you’ll get in trouble when you try to create a new instance or update an existing one. All your added fields will be treated as unpermitted. The solution for this problem is to customise Devise’s configure_permited_parameters action. All you need to do is to add this action to your Application controller and push parameters that need to be permitted to devise_paremeter_sanitizer array. So let’s say you have a User Model and you have added company_name and website fields to your user’s table, to permit this parameters on sign_up you need to add this to your Application controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def configure_permitted_parameters
</span><span class='line'>  devise_parameter_sanitizer.for(:sign_up).push(:company_name, :website)
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>It is the same principle for the :sign_in and :edit_account. You can see what are <a href="https://github.com/plataformatec/devise/blob/master/lib/devise/parameter_sanitizer.rb#L83">default permitted parameters here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to skip Devise trackable updates]]></title>
    <link href="http://icebergist.com/posts/how-to-skip-devise-trackable-updates/"/>
    <updated>2014-05-12T19:10:06+02:00</updated>
    <id>http://icebergist.com/posts/how-to-skip-devise-trackable-updates</id>
    <content type="html"><![CDATA[<p>Devise has a very useful Trackable module used to track user&rsquo;s sign in count, timestamps and IP address. There are some occasions when you need to disable tracking. For example for API requests where user signs in on every request; for instances where admin might sign in as an user; and similar.</p>

<p>To disable Devise Trackable module you need to set <code>request.env["devise.skip_trackable"] = true</code>. You have to do that before trying to authenticate user, so you&rsquo;ll want to put it in a before_filter, or even better prepend_before_filter to make sure it&rsquo;s before authentication.</p>

<p>Add this to your controller in which you want to disable tracking:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>prepend_before_filter :disable_devise_trackable
</span><span class='line'>
</span><span class='line'>protected
</span><span class='line'>  def disable_devise_trackable
</span><span class='line'>    request.env["devise.skip_trackable"] = true
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrade Ubuntu 8.04 LTS server]]></title>
    <link href="http://icebergist.com/posts/upgrade-ubuntu-8-dot-04-lts-server/"/>
    <updated>2014-01-06T11:36:43+01:00</updated>
    <id>http://icebergist.com/posts/upgrade-ubuntu-8-dot-04-lts-server</id>
    <content type="html"><![CDATA[<p>Note to self: here is how to upgrade Ubuntu 8.04 LTS (or any other release that is no longer supported) to newer Ubuntu release.</p>

<p>When you are upgrading unsupported release of Ubuntu if you try to do the usual <code>sudo apt-get update</code> it will most likely fail because&hellip; well, it&rsquo;s unsupported. The simple fix for this is to change your <code>/etc/apt/sources.list</code> and replace repository URLs from something like <code>us.archive.ubuntu.com</code> to <code>old-releases.ubuntu.com</code>.</p>

<p>After that you should be able follow normal upgrade procedure (use sudo if you are not root):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>apt-get update
</span><span class='line'>apt-get install update-manager-core
</span><span class='line'><span class="k">do</span>-release-upgrade
</span></code></pre></td></tr></table></div></figure>


<p>References:</p>

<ul>
<li><a href="http://rimuhosting.com/knowledgebase/linux/distros/ubuntu" title="Rimuhosting's page on upgrading Ubuntu">Rimuhosting&rsquo;s page on upgrading Ubuntu</a></li>
<li><a href="http://askubuntu.com/questions/91815/how-to-install-software-or-upgrade-from-old-unsupported-release" title="Discussion on upgrading unsupported Ubuntu release">Discussion on upgrading unsupported Ubuntu release</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick VirtualBox/Vagrant setup with Heroku-like box]]></title>
    <link href="http://icebergist.com/posts/quick-virtualboxvagrant-setup-with-heroku-like-box"/>
    <updated>2013-09-16T10:00:00+02:00</updated>
    <id>http://icebergist.com/posts/quick-virtualboxvagrant-setup-with-heroku-like-box</id>
    <content type="html"><![CDATA[<p>Here is a quick way to setup VirtualBox using Vagrant with Heroku-like box on Mac.</p>

<ol>
<li><p>Install VirtualBox from <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank"><a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></a></p></li>
<li><p>Install Vagrant from <a href="http://downloads.vagrantup.com/" target="_blank"><a href="http://downloads.vagrantup.com/">http://downloads.vagrantup.com/</a></a></p></li>
<li><p>Create Vagrantfile for Heroku-like box (based on <a href="https://github.com/ejholmes/vagrant-heroku" target="_blank"><a href="https://github.com/ejholmes/vagrant-heroku">https://github.com/ejholmes/vagrant-heroku</a></a>) that looks something like:</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>        <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;heroku&quot;</span>
</span><span class='line'>        <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&quot;https://dl.dropboxusercontent.com/s/rnc0p8zl91borei/heroku.box&quot;</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&quot;.&quot;</span><span class="p">,</span> <span class="s2">&quot;/vagrant&quot;</span><span class="p">,</span> <span class="ss">:nfs</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>        <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;192.168.1.42&quot;</span>  <span class="c1"># required for NFS</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Beside telling Vagrant to use Heroku-like box from <a href="https://github.com/ejholmes/vagrant-heroku" target="_blank"><a href="https://github.com/ejholmes/vagrant-heroku">https://github.com/ejholmes/vagrant-heroku</a></a> it also sets up shared dir between host and VM machine. It will mount Vagrantfile dir (.) to /vagrant in VM.</p>

<p><code>vagrant up</code> will setup the VM and start it up.</p>

<p>Now you can use <code>vagrant ssh</code> to login to VM.</p>

<p>Vagrant Heroku-like box comes with Postgresql, but if you want you can easily setup sqlite:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install libsqlite3-dev
</span></code></pre></td></tr></table></div></figure>


<p><strong>Bonus tip</strong>: when you are working on multiple projects sometimes you can forget which VMs are running. You can list all running VMs using:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>VBoxManage list runningvms
</span></code></pre></td></tr></table></div></figure>


<p>Further reading:</p>

<ul>
<li><a href="http://docs.vagrantup.com/v2/" target="_blank">Vagrant docs</a></li>
<li><a href="https://github.com/ejholmes/vagrant-heroku" target="_blank">Vagrant Heroku-like box</a> which can be easily customized.</li>
<li><a href="http://loudcoding.com/posts/how-to-use-vagrant-to-run-celadon-cedar-stack-on-heroku/" target="_blank">Another Vagrant setup tutorial</a></li>
<li><a href="https://www.stackmachine.com/blog/web-development-on-a-vm-is-it-slower" target="_blank">VM speed benchmarks</a> in case you doubt in VM speed.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RailsDiff]]></title>
    <link href="http://icebergist.com/posts/railsdiff"/>
    <updated>2013-09-10T10:00:00+02:00</updated>
    <id>http://icebergist.com/posts/railsdiff</id>
    <content type="html"><![CDATA[<p><a title="RailsDiff - compare Rails default app" href="http://railsdiff.org/" target="_blank">RailsDiff</a>
is a very useful site when upgrading Rails versions (for example, from Rails 3.2 to Rails 4). It will generate default Rails app using two different Rails versions and it will compare them. The result is that you can see all the configuration changes (like in application.rb) and all other changes &#8211; which is really useful when upgrading to new Rails version.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec and FactoryGirl setup for testing Carrierwave uploaders]]></title>
    <link href="http://icebergist.com/posts/rspec-and-factorygirl-setup-for-testing-carrierwave-uploaders"/>
    <updated>2013-09-07T10:00:00+02:00</updated>
    <id>http://icebergist.com/posts/rspec-and-factorygirl-setup-for-testing-carrierwave-uploaders</id>
    <content type="html"><![CDATA[<p>Assume that you have the usual setup with model (MyFile) using simple Carrierwave uploader (MyFileUploader):</p>

<pre># app/models/my_file.rb
class MyFile &lt; ActiveRecord::Base
  mount_uploader :file, MyFileUploader
end</pre>


<p>To be able to test Carrierwave uploaders with RSpec using FactoryGirl factories you need:</p>

<ul>
<li><span style="line-height: 13px;">define factory with uploaded file</span></li>
<li>modify test environment storage so test file uploads are separated from other uploads</li>
<li>turn off image processing to speed up tests</li>
<li>perform cleanup after each test</li>
</ul>


<h2>Define factory</h2>

<pre># spec/factories/my_files.rb
FactoryGirl.define do
 factory :my_file do
   photo Rack::Test::UploadedFile.new(File.open(File.join(Rails.root, '/spec/fixtures/myfiles/myfile.jpg')))
 end
end</pre>


<h2>Setup Carrierwave</h2>

<p>First we need to make sure Carrierwave is using local file system for storage and to disable file processing for testing environments. Disabling file processing will speed up tests considerably. We can do that by adding following to Carrierwave initializer:</p>

<pre>if Rails.env.test? || Rails.env.cucumber?
  CarrierWave.configure do |config|
    config.storage = :file
    config.enable_processing = false
  end
end</pre>


<p>Next we should separate test uploads from any other uploads. We can do that by modifying cache_dir and store_dir methods for all Carrierwave models (i.e. all models that are descendants of CarrierWave::Uploader::Base). So the whole Carrierwave initializer looks something like:</p>

<pre># config/initializers/carrierwave.rb
if Rails.env.test? || Rails.env.cucumber?
  CarrierWave.configure do |config|
    config.storage = :file
    config.enable_processing = false
  end

  # make sure our uploader is auto-loaded
  MyFileUploader

  # use different dirs when testing
  CarrierWave::Uploader::Base.descendants.each do |klass|
    next if klass.anonymous?
    klass.class_eval do
      def cache_dir
        "#{Rails.root}/spec/support/uploads/tmp"
      end

      def store_dir
        "#{Rails.root}/spec/support/uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}"
      end
    end
  end
end</pre>


<h2>Clean up uploaded files</h2>

<p>Using factory defined above will create uploaded files in cache_dir and store_dir. These are just temporary files and should be removed after each test, so each of them has a clean slate. By adding after :each hook in RSpec configuration block we can remove these files simply by deleting spec/support/uploads dir.</p>

<pre># spec_helper.rb
RSpec.configure do |config|
  config.after(:each) do
    if Rails.env.test? || Rails.env.cucumber?
      FileUtils.rm_rf(Dir["#{Rails.root}/spec/support/uploads"])
    end 
  end
end</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Random Rails tips]]></title>
    <link href="http://icebergist.com/posts/random-rails-tips"/>
    <updated>2013-03-09T09:00:00+01:00</updated>
    <id>http://icebergist.com/posts/random-rails-tips</id>
    <content type="html"><![CDATA[<p>Here are some random Rails tips I&#8217;ve found useful:</p>

<ul>
<li><strong>rails console sandbox</strong> &#8211; if you open console like this it will rollback all database changes once you exit. Pretty useful for playing around without making any changes to database.</li>
<li><strong>rake db:migrate:status</strong> &#8211; useful when you want to see the status of current database. It will show the status of all migrations.</li>
<li><strong>User.pluck(:email)</strong> &#8211; since Rails 3.2.1 you can use <a href="http://apidock.com/rails/ActiveRecord/Calculations/pluck">pluck</a> method to get an array of values in one particular column. It&#8217;s the equvivalent of doing User.select(:email).map(&amp;:email)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paperclip, Heroku and Amazon S3 credentials]]></title>
    <link href="http://icebergist.com/posts/paperclip-heroku-and-amazon-s3-credentials"/>
    <updated>2011-01-24T09:00:00+01:00</updated>
    <id>http://icebergist.com/posts/paperclip-heroku-and-amazon-s3-credentials</id>
    <content type="html"><![CDATA[<p>Setting up Paperclip to use Amazon&#8217;s S3 is as simple as setting :storage => :s3 and providing right credentials to Paperclip by setting :s3_credentials option. Best way to provide S3 credentials is to use an YML file (usually config/s3.yml) which allows you to set different credentials for each environment. For example:</p>

<pre># config/s3.yml
development:
  access_key_id: XYZXYZXYZ
  secret_access_key: XYZXYZXYZ
  bucket: mygreatapp-development
production:
  access_key_id: XYZXYZXYZ
  secret_access_key: XYZXYZXYZ
  bucket: mygreatapp-production
</pre>


<p>Of course you want to treat s3.yml same as database.yml &#8211; i.e. you don&#8217;t want to track it with git and you want for each person/server to have it&#8217;s own.</p>

<p>However, consider this: you are working on Open Source app in a public git repository and you are deploying it on Heroku. Heroku doesn&#8217;t allow you to create files (unless they are in git repository) and you can&#8217;t commit s3.yml with your credentials to public repository.</p>

<p>One solution is to define different :s3_credentials hash in one of the environment files or to load different YML file for each environment and generate hash from it. Downside is that you need to have a separate YML file for each environment and/or you need to convert YML to hash. Other solution could be to have separate local branch from which you will push to Heroku. Problem with this is that you have to have a local branch for deploying. This means if there are multiple developers who deploy to production each should have separate local branch.</p>

<p>Much simpler way to deploy Paperclip with different S3 credentials for each environment (with one of the environment being deployed on Heroku; and repository being public) is to create s3.yml file as usual (and don&#8217;t commit it to git), but define values only for local environment.</p>

<p>For production deployment on Heroku you can write initializer which will set :s3_credentials from ENV variables.</p>

<pre># initializers/s3.rb
if Rails.env == "production"
  # set credentials from ENV hash
  S3_CREDENTIALS = { :access_key_id => ENV['S3_KEY'], :secret_access_key => ENV['S3_SECRET'], :bucket => "sharedearth-production"}
else
  # get credentials from YML file
  S3_CREDENTIALS = Rails.root.join("config/s3.yml")
end

# in your model
has_attached_file :photo, :storage => :s3, :s3_credentials => S3_CREDENTIALS
</pre>


<p>and you can easily set persistant ENV vars on Heroku with:</p>

<pre>$ heroku config:add S3_KEY=XYZXYZ S3_SECRET=XYZXYZ
</pre>


<p>(<a href="http://docs.heroku.com/config-vars#quick-example">according to Heroku docs</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 reading list]]></title>
    <link href="http://icebergist.com/posts/rails-3-reading-list"/>
    <updated>2010-03-29T10:00:00+02:00</updated>
    <id>http://icebergist.com/posts/rails-3-reading-list</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been planning to catchup with all the new Rails 3 stuff. To get me started I&#8217;ve compiled a small Rails 3 related reading list.</p>

<ol>
<li><a href="http://guides.rails.info/3_0_release_notes.html">Ruby on Rails 3.0 Release Notes</a></li>
<li><a href="http://m.onkey.org/2010/1/22/active-record-query-interface">Active Record Query Interface 3.0</a></li>
<li><a href="http://edgerails.info/articles/what-s-new-in-edge-rails/2010/02/23/the-skinny-on-scopes-formerly-named-scope/">The Skinny on Scopes (Formerly named_scope)</a></li>
<li><a href="http://blog.envylabs.com/2010/02/rails-3-beautiful-code/">Rails 3 Beautiful Code</a></li>
<li><a href="http://railscasts.com/tags/27">Railscasts &#8211; rails-3.0 episodes</a></li>
<li><a href="http://joshhuckabee.com/jquery-rails-3">jQuery with Rails 3</a></li>
<li><a href="http://litanyagainstfear.com/blog/2010/02/03/the-rails-module/">The Rails Module (in Rails 3)</a></li>
</ol>


<p>Once I&#8217;m done with it I plan to get even more from:</p>

<ul>
<li><a href="http://edgerails.info/articles/what-s-new-in-edge-rails/2010/02/10/rails-3-resources/">Rails 3 Resources</a></li>
<li><a href="http://www.rubyinside.com/rails-3-0-beta-links-2966.html">Rails 3.0 Beta: 36 Links and Resources To Get You Going</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Expected x.rb to define X (LoadError)]]></title>
    <link href="http://icebergist.com/posts/expected-xrb-to-define-x-loaderror"/>
    <updated>2009-04-15T10:00:00+02:00</updated>
    <id>http://icebergist.com/posts/expected-xrb-to-define-x-loaderror</id>
    <content type="html"><![CDATA[<p>I have been working on extending Rails&#8217; I18n Simple backend to make it work with Serbian grammar (post on that will follow soon), but I kept getting an error:</p>

<p><code>Expected ./lib/serbian_simple.rb to define SerbianSimple (LoadError)</code></p>

<p>I&#8217;ve just spent an hour trying to figure out why this keeps happening and I found that there&#8217;s a lot of people with similar problem.</p>

<p>It seems that the problem appears when Rails tries to autoload files. In my case there was a simple solution &#8211; I just added require &#8216;serbian_simple.rb&#8217; in environment.rb to manually load the file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple password protected administration with CodeIgniter]]></title>
    <link href="http://icebergist.com/posts/simple-password-protected-administration-with-codeigniter"/>
    <updated>2009-03-08T09:00:00+01:00</updated>
    <id>http://icebergist.com/posts/simple-password-protected-administration-with-codeigniter</id>
    <content type="html"><![CDATA[<p>Last week I&#8217;ve taken a break from Ruby/Rails development and I&#8217;ve worked on a site that uses PHP with <a href="http://codeigniter.com/">CodeIgniter</a> framework.</p>

<p>Despite the fact that CodeIgniter has a very nice documentation I found it very difficult to find a way to do some simple things, that are more or less obvious, but which can be a problem for someone who hasn&#8217;t worked with CodeIgniter before. (for example, I found myself more than once looking at CI code to figure out how it works, so I can use it)</p>

<p>I had to make a simple password protected administration section. One admin user, one password, no user registrations, no roles &#8211; simple as possible. As I was using CI framework I decided to find a plugin/library that does this. Unfortunately most CI authorization plugins/libraries are very bloated and too complicated for this simple task. I tried to find some examples how to handle this simple use case, but nothing came up.</p>

<p>Finally I&#8217;ve found a small authorization plugin: <a href="http://codeigniter.com/wiki/Erkana/">Erkanaauth</a>.</p>

<p>First you need a user table (must be named &#8216;users&#8217;) which only needs to have an id field and all other fields are optional because you will manually specify what other columns will be used. I opted for simple id, username, password:</p>

<pre>CREATE TABLE IF NOT EXISTS `users` (
  `id` int(11) NOT NULL auto_increment,
  `username` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
);</pre>


<p>We will need to &#8220;install&#8221; ErkanaAuth library. You should <a href="http://codeigniter.com/wiki/File:erkanaauth.zip/">download it</a> and unzip it.</p>

<p>Next we should create an Admin controller which will handle all administration tasks (remember I&#8217;m making simple admin here, so I don&#8217;t need to protect multiple controllers).</p>

<pre>&lt;?php
class Admin extends Controller {
  function Admin()
  {
    parent::Controller();   
    $this->load->database();
    $this->load->helper(array('url', 'form', 'date'));
    $this->load->library(array('form_validation', 'upload', 'Erkanaauth', 'session'));
  }
}
?&gt;</pre>


<p>Constructor just connects to database and loads some standard helpers and libraries (including Erkanaauth) that are usually used.</p>

<p>Next step is to add a function which we can call to verify if user is logged in:</p>

<pre>private
  function authorize()
  {
      if($this->erkanaauth->try_session_login())
          return true;
  
      redirect('admin/login');
  }
</pre>


<p>Function uses Erkanaauth&#8217;s try_session_login which checks if user is already logged in (checks session for user id). If user isn&#8217;t logged in we&#8217;ll redirect him to our login page:</p>

<pre>function login()
  {
    $username = $this->input->post('username', true);
    $password = $this->input->post('password', true);
    if($username || $password)
    {
      if($this->erkanaauth->try_login(array('username' => $username, 'password' => $password)))
        redirect('admin');
    }
    
    $this->load->view('admin_login');
  }

  function logout()
  {
    $this->erkanaauth->logout();
    redirect('admin');
  }
</pre>


<p>Key command here is try_login in login function which tries to find an entry in users table that fulfills given conditions. If you have different users table than the one I made this is the place where you should enter your column names.</p>

<p>Logout function is has just a simple call to Erkana&#8217;s logout function. Nothing special there.</p>

<p>Of course we also need a login page template which should contain a simple user/pass form. It&#8217;s pretty basic and you can see it if you get the complete code (see at the end).</p>

<p>Finally we have everything needed to protect any page in Admin controller. In order to protect a page all you need to do is to add a call to authorize function to any function you want to protect. Like this:</p>

<pre>function index()
  {
    $this->authorize();
    echo "Do something useful... For now just display logout link: ";
    echo anchor('admin/logout', "Logout");
  }
</pre>


<p>That&#8217;s it. Now you have fully functional administration section which requires username and password authorization.</p>

<p>You can get the complete sample application from <a href="http://github.com/basti/ci-admin-section/tree/master">Github repository</a>. Feel free to expand on it or use it any way you like.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Restoring superblock on Ubutnu]]></title>
    <link href="http://icebergist.com/posts/restoring-superblock-on-ubutnu"/>
    <updated>2008-11-09T09:00:00+01:00</updated>
    <id>http://icebergist.com/posts/restoring-superblock-on-ubutnu</id>
    <content type="html"><![CDATA[<p>Recently I had a problem on my Torrent box (an old PC that I use as dedicated torrent client) that runs Ubuntu. For some reason my root partition was being mounted as read-only. Everything else seemed to work (all other partitions were mounted properly), but I couldn&#8217;t change any of my config or do anything on root partition.</p>

<p>I did the usual stuff:</p>

<ul>
<li>Run fsck checks and it said that everything is fine</li>
<li>Used Ubuntu&#8217;s live CD to boot, which got me read-write access to root partition. I changed some things in fstab, tried to get it to be rw permanently. No matter what I did as soon as I rebooted the root partition was once again read-only.</li>
<li>I tried booting from some repair disks I have, but all checks passed and no problem was detected. <img src='http://icebergist.com/wp-includes/images/smilies/icon_sad.gif' alt=':(' class='wp-smiley' /></li>
</ul>


<p>Finally, I read somewhere that a similar problem was caused by faulty superblock on hard drive. Fortunately Ubuntu stores superblock backups in different places around disk, so I decided to try to restore it from one of those backups.</p>

<p>It turned out that all I needed was a single command (this <a href="http://ubuntuforums.org/showpost.php?s=72da065bbe1506b27f41a8cfc252c732&amp;p=1424786&amp;postcount=5" title="Bad superblock">Ubuntu forum post helped</a>) to restore superblock:</p>

<p><code>e2fsck -b 32768 /dev/hdc1</code></p>

<p>After that my root partition was back to read-write mode. <img src='http://icebergist.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p>

<p>Before you do stuff like that to your computer I suggest that you read man pages for <a href="http://linux.die.net/man/8/mke2fs" title="mke2fs">mke2fs</a> and <a href="http://linux.die.net/man/8/e2fsck" title="e2fsck">e2fsck</a>. It will prevent you from doing something foolish like deleting your whole hard drive. <img src='http://icebergist.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p>
]]></content>
  </entry>
  
</feed>
